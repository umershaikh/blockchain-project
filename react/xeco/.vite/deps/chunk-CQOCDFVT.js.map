{
  "version": 3,
  "sources": ["../../node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts", "../../node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts"],
  "sourcesContent": ["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n", "import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  isTelegram() {\n    return (\n      typeof window !== 'undefined' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (Boolean((window as any).TelegramWebviewProxy) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).Telegram) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).TelegramWebviewProxyProto))\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    //  Universal link required in telegram context\n    if (safeAppUrl.startsWith('https://t.me')) {\n      // eslint-disable-next-line require-unicode-regexp\n      const formattedUri = Buffer.from(wcUri).toString('base64').replace(/[=]/g, '')\n      if (safeAppUrl.endsWith('/')) {\n        safeAppUrl = safeAppUrl.slice(0, -1)\n      }\n\n      this.setWalletConnectDeepLink(safeAppUrl, name)\n\n      const url = new URL(safeAppUrl)\n      url.searchParams.set('startapp', formattedUri)\n      const link = url.toString()\n\n      return link\n    }\n\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    const adjustedTarget = this.isTelegram() ? '_blank' : target\n    window.open(href, adjustedTarget, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n", "import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n", "import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n", "import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],
  "mappings": "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",
  "names": ["state", "valtioSub", "__spreadValues"]
}
